# ============================================
# Powerlevel10k instant prompt (MUST BE FIRST)
# ============================================
# Generated by Powerlevel10k
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# Source Oh My Zsh AFTER instant prompt
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="powerlevel10k/powerlevel10k"
source $ZSH/oh-my-zsh.sh

# Load p10k config (do this LAST to avoid console output)
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ============================================
# Environment Variables (No Console I/O)
# ============================================
# Load environment files silently
[[ -f ~/.env ]] && source ~/.env 2>/dev/null

# Basic exports (no commands that produce output)
export EDITOR="nvim"
export BAT_THEME="Monokai Extended"
export PGDATA=/usr/local/var/postgres
export BUN_INSTALL="$HOME/.bun"

# ============================================
# PATH Setup (Safe, No Go Commands)
# ============================================
# Static PATH - avoid any command execution during loading
__safe_path_dirs=(
  "$HOME/bin"
  "$HOME/.local/bin"
  "$HOME/.bun/bin"
  "/opt/homebrew/bin"
  "/opt/homebrew/opt/postgresql@17/bin"
  "/opt/homebrew/opt/ruby/bin"
  "$PNPM_HOME"
)

# Add paths safely without duplicate checking (faster)
for dir in "${__safe_path_dirs[@]}"; do
  [[ -d "$dir" ]] && [[ ":${PATH}:" != *":$dir:"* ]] && PATH="${dir}${PATH:+":$PATH"}"
done

# Ruby-related paths
__ruby_paths=(
  "/opt/homebrew/lib/ruby/gems/3.3.0/bin"
  "$HOME/.gem/ruby/2.6.0/bin"
)

for dir in "${__ruby_paths[@]}"; do
  [[ -d "$dir" ]] && [[ ":${PATH}:" != *":$dir:"* ]] && PATH="${dir}${PATH:+":$PATH"}"
done

# Development paths that might not always exist
__dev_paths=(
  "$HOME/.rvm/bin"
  "$HOME/.modular/bin"
)

for dir in "${__dev_paths[@]}"; do
  [[ -d "$dir" ]] && [[ ":${PATH}:" != *":$dir:"* ]] && PATH="${dir}${PATH:+":$PATH"}"
done

# Clean PATH array (removes duplicates)
typeset -U PATH PATH

# ============================================
# Plugin Configuration (Safe Loading)
# ============================================
# Core plugins for Oh My Zsh
plugins=(
  git
  fzf
  web-search
  vi-mode
)

# Load syntax highlighting and autosuggestions AFTER Oh My Zsh
# These must be last to avoid conflicts
if [[ -f "$ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]]; then
  source "$ZSH/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

if [[ -f "$ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh" ]]; then
  source "$ZSH/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
fi

if [[ -f "$ZSH/custom/plugins/zsh-vi-mode/zsh-vi-mode.zsh" ]]; then
  source "$ZSH/custom/plugins/zsh-vi-mode/zsh-vi-mode.zsh"
fi

# Bun completion (safe loading)
if [[ -s "/Users/barry/.bun/_bun" ]]; then
  source "/Users/barry/.bun/_bun"
fi

# ============================================
# Version Managers (Lazy Loading Only)
# ============================================
# rbenv - only initialize if available, suppress output
if type rbenv >/dev/null 2>&1; then
  eval "$(rbenv init - zsh --no-rehash 2>/dev/null)" 2>/dev/null || true
fi

# ============================================
# Safe Aliases (No Command Output During Loading)
# ============================================
# Editor
alias vim="nvim"
alias p3="python3 2>/dev/null || python"

# Git
alias gcm="git commit -m"
alias gd="git diff"
alias g="git"
alias gb="git branch"

# Colorls
if command -v colorls >/dev/null 2>&1; then
  alias ls='colorls'
  alias ll='colorls -lA'
  alias la='colorls -A'       
  alias l='colorls -l'       
fi

# Check if bat exists before using it
if command -v bat >/dev/null 2>&1; then
  alias gd='git diff --color=always | bat --paging=never --language diff 2>/dev/null || git diff'
fi

alias lzg="command -v lazygit >/dev/null 2>&1 && lazygit || echo 'lazygit not found'"

# Navigation
if command -v zoxide >/dev/null 2>&1; then
  alias z="zoxide"
else
  alias z="cd"
fi

# File finding (safe)
alias lstd='find . -maxdepth 1 -mtime 0 -type f 2>/dev/null || ls -lt 2>/dev/null || true'


# ============================================
# Safe Functions (No Startup Cost)
# ============================================
# Quick file search with fzf (only if available)
if command -v fzf >/dev/null 2>&1; then
  fz() {
    local selected
    selected=$(find . -path '*/\.*' -prune -o -type f -print -o -type l -print 2>/dev/null | fzf +m)
    [[ -n "$selected" ]] && ${EDITOR:-nvim} "$selected"
  }
fi

# Enhanced git status
gstat() {
  if command -v bat >/dev/null 2>&1 && command -v git >/dev/null 2>&1; then
    git status --porcelain=v1 --color=always 2>/dev/null | bat --language diff --color=always --paging=never 2>/dev/null
  elif command -v git >/dev/null 2>&1; then
    git status 2>/dev/null
  fi
}

# Kill process safely
killp() {
  local pid
  if command -v pgrep >/dev/null 2>&1; then
    pid=$(pgrep -f "$1" 2>/dev/null | head -1)
    [[ -n "$pid" ]] && kill "$pid" 2>/dev/null && echo "Killed PID $pid" || echo "No process found matching '$1'"
  else
    echo "pgrep not available"
  fi
}

# ============================================
# Manpager Setup (Delayed to Avoid Startup Impact)
# ============================================
__safe_manpager_setup() {
  # Only setup once per session
  if [[ -z "${MANPAGER_SET}" ]]; then
    export MANPAGER_SET=1
    
    # Safe terminal width detection
    if command -v tput >/dev/null 2>&1 && command -v bat >/dev/null 2>&1; then
      export COLUMNS="${COLUMNS:-$(tput cols 2>/dev/null || echo 80)}"
      export MANWIDTH="$COLUMNS"
      export MANPAGER="sh -c 'col -bx | bat -l man --color=always --paging=never -p' 2>/dev/null | less -R 2>/dev/null"
    fi
  fi
}

# Use chpwd instead of precmd for better performance (runs less often)
autoload -Uz add-zsh-hook
add-zsh-hook chpwd __safe_manpager_setup

# Initial setup on first prompt only
__initial_setup() {
  __safe_manpager_setup
  # Remove this hook after first run
  add-zsh-hook -d precmd __initial_setup
}
add-zsh-hook precmd __initial_setup

# ============================================
# Cleanup and Finalization
# ============================================
unset __safe_path_dirs __ruby_paths __dev_paths

# pnpm
export PNPM_HOME="/Users/barry/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

export PATH="/opt/homebrew/opt/openjdk@21/bin:$PATH"

# Ensure PATH is exported
export PATH

